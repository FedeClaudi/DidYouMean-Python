language: python
# https://docs.travis-ci.com/user/languages/python/
# Because the code depends a lot on the Python interpreter
# used (Python version and Python implementation), we want
# to test all the possible configurations, including
# deprecated versions.
# Also, on Travis, all versions do not exist on all distros
# (and when they do, they might actually correspond to
# different minor versions of the interpreter). Thus, we end
# end with a matrix to perform tests on different distros.
# Failure is allowed on versions that are known to be missing
# (these configs are tested anyway in case they come back).
matrix:
  include:
  - os: linux
    dist: trusty
    python: 3.6
  - os: linux
    dist: xenial
    python: 3.6
  - os: linux
    dist: trusty
    python: 3.6-dev
  - os: linux
    dist: xenial
    python: 3.6-dev
  - os: linux
    dist: trusty
    python: 3.7
  - os: linux
    dist: xenial
    python: 3.7
  - os: linux
    dist: trusty
    python: 3.7-dev
  - os: linux
    dist: xenial
    python: 3.7-dev
  - os: linux
    dist: trusty
    python: 3.8
  - os: linux
    dist: xenial
    python: 3.8
  - os: linux
    dist: trusty
    python: 3.8-dev
  - os: linux
    dist: xenial
    python: 3.8-dev
  - os: linux
    dist: trusty
    python: nightly
  - os: linux
    dist: xenial
    python: nightly
  allow_failures:
  - os: linux
    dist: trusty
    python: 3.7
  - os: linux
    dist: trusty
    python: 3.8
  - os: linux
    dist: xenial
    python: 3.8
  - os: linux
    dist: trusty
    python: 3.8-dev


install:
  - pip install --upgrade pep8
  - pip install pep257
  - pip install --upgrade pyflakes
  - pip install unittest2
  - pip install coverage
  - pip install coveralls
  - pip install codecov

before_script:
 # Information about Python version
 - python -VV
 - python -c "import sys; print(sys._git)" || true
 - python -c "set.add(0)" || true

script:
 - coverage run -m unittest2 discover --start-directory=didyoumean --pattern=*.py
 - pip install .

after_success:
 - coveralls
 - codecov
 # Information about Python builtins/keywords
 # - python -c "import sys; import keyword; print({sys.version_info: {'kword': set(keyword.kwlist), 'builtins': set(dir(__builtins__))}})" || true
